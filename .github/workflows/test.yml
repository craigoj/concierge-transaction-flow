name: Testing Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        timeout-minutes: 5

      - name: Run ESLint
        run: npm run lint
        timeout-minutes: 5

      - name: Type check
        run: npx tsc --noEmit
        timeout-minutes: 5

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        timeout-minutes: 5

      - name: Run unit tests
        run: npm run test:run
        timeout-minutes: 10

      - name: Retry unit tests if failed
        if: failure()
        run: npm run test:run
        timeout-minutes: 10

      - name: Generate coverage report
        run: npm run test:coverage
        timeout-minutes: 5

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        timeout-minutes: 5

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build
        timeout-minutes: 10
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_ENCRYPTION_KEY: ${{ secrets.VITE_ENCRYPTION_KEY }}
          VITE_APP_NAME: 'Concierge Transaction Flow'

      - name: Run Playwright tests
        run: npx playwright test --retries=2
        timeout-minutes: 15
        env:
          CI: true

      - name: Retry Playwright tests if failed
        if: failure()
        run: npx playwright test --retries=1
        timeout-minutes: 10
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: test-results/
          retention-days: 30

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        timeout-minutes: 5

      - name: Run security audit
        run: npm audit --audit-level=moderate
        timeout-minutes: 3

      - name: Check for known vulnerabilities
        run: npm audit --audit-level=moderate --json > audit-results.json || true
        timeout-minutes: 3

      - name: Display audit results
        run: |
          if [ -f audit-results.json ]; then
            echo "Security audit completed. Check for vulnerabilities above."
            cat audit-results.json | jq -r '.vulnerabilities | keys[]' || echo "No vulnerabilities found or jq not available"
          fi
        timeout-minutes: 2

  build-test:
    name: Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        timeout-minutes: 5

      - name: Build for production
        run: npm run build
        timeout-minutes: 10
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_ENCRYPTION_KEY: ${{ secrets.VITE_ENCRYPTION_KEY }}
          VITE_APP_NAME: 'Concierge Transaction Flow'

      - name: Test production build
        run: |
          npm run preview &
          sleep 10
          curl -f http://localhost:4173 || exit 1
        timeout-minutes: 5

  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests, security-audit, build-test]

    steps:
      - name: All checks passed
        run: echo "All quality gates passed successfully!"

  notify-on-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests, e2e-tests, security-audit, build-test]
    if: failure()

    steps:
      - name: Notify team of failure
        run: |
          echo "‚ùå Testing pipeline failed!"
          echo "Check the failed jobs above for details."
